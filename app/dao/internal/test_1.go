// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// Test1Dao is the manager for logic model data accessing and custom defined data operations functions management.
type Test1Dao struct {
	gmvc.M                                      // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C       test1Columns // C is the short type for Columns, which contains all the column names of Table for convenient usage.	
	DB      gdb.DB                              // DB is the raw underlying database management object.
	Table   string                              // Table is the underlying table name of the DAO.
}

// Test1Columns defines and stores column names for table test1.
type test1Columns struct {
	Id  string //   
    Ct  string //
}

// NewTest1Dao creates and returns a new DAO object for table data access.
func NewTest1Dao() *Test1Dao {
    columns := test1Columns{
		Id: "id",  
            Ct: "ct",
	}
	return &Test1Dao{
		C: 	   columns,
		M:     g.DB("default").Model("test1").Safe(),
		DB:    g.DB("default"),
		Table: "test1",
	}
}